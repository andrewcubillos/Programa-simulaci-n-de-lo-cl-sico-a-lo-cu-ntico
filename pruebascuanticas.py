import Programasimulaciondeloclasicoalocuantico 


import unittest

class PruebasFunciones(unittest.TestCase):
    
    def test1(self):
        self.assertEqual([[0], [0], [12], [5], [1], [9]], Programasimulaciondeloclasicoalocuantico.state([[False, False, False, False, False, False], [False, False, False, False, False, False], [False, True, False, False, False, True], [False, False, False, True, False, False], [False, False, True, False, False, False], [True, False, False, False, True, False]],[[6],[2],[1],[5],[3],[10]],2))    
    def test2(self):
        self.assertEqual([[0.0], [0.0], [0.0], [0.16666666666666666], [0.16666666666666666], [0.3333333333333333], [0.16666666666666666], [0.16666666666666666]],Programasimulaciondeloclasicoalocuantico.stateprobabilistic([[0, 0, 0, 0, 0, 0, 0, 0], [0.5, 0, 0, 0, 0, 0, 0, 0], [0.5, 0, 0, 0, 0, 0, 0, 0], [0, 0.3333333333333333, 0, 1, 0, 0, 0, 0], [0, 0.3333333333333333, 0, 0, 1, 0, 0, 0], [0, 0.3333333333333333, 0.3333333333333333, 0, 0, 1, 0, 0], [0, 0, 0.3333333333333333, 0, 0, 0, 1, 0], [0, 0, 0.3333333333333333, 0, 0, 0, 0, 1]],[[1],[0],[0],[0],[0],[0],[0],[0]],2))
    
    def test3(self): 
        self.assertEqual([[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0.1666666666666667, 0.3333333333333334, 0, 1, 0, 0, 0, 0], [0.1666666666666667, 0.3333333333333334, 0, 0, 1, 0, 0, 0], [0, 0.3333333333333334, 0.3333333333333334, 0, 0, 1, 0, 0], [0.1666666666666667, 0, 0.3333333333333334, 0, 0, 0, 1, 0], [0.1666666666666667, 0, 0.3333333333333334, 0, 0, 0, 0, 1]],Programasimulaciondeloclasicoalocuantico.quantumstate([[(0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0)], [(0.7071067811865475, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0)], [(0.7071067811865475, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0)], [(0, 0), (-0.4082482904638631, 0.4082482904638631), (0, 0), (1, 0), (0, 0), (0, 0), (0, 0), (0, 0)], [(0, 0), (-0.4082482904638631, -0.4082482904638631), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (0, 0)], [(0, 0), (0.4082482904638631, -0.4082482904638631), (-0.4082482904638631, 0.4082482904638631), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0)], [(0, 0), (0, 0), (-0.4082482904638631, -0.4082482904638631), (0, 0), (0, 0), (0, 0), (1, 0), (0, 0)], [(0, 0), (0, 0), (0.4082482904638631, -0.4082482904638631), (0, 0), (0, 0), (0, 0), (0, 0), (1, 0)]]
,2))
        
if __name__ == '__main__':
    unittest.main()
